// 'use client';

// import { useState } from "react";
// import { fakeAISummary } from "@/utils/fakeAI";
// import { createClient } from "@/utils/supabase/client";

// type SummaryResult = {
//   summary: string;
//   // Add more fields if needed (e.g. confidence, keywords, etc.)
// };

// export default function DashboardPage() {
//   const [jobTitle, setJobTitle] = useState("");
//   const [loading, setLoading] = useState(false);
//   const [result, setResult] = useState<SummaryResult | null>(null);
  

//   const handleSubmit = async (e: React.FormEvent) => {
//     e.preventDefault();
//     setLoading(true);

//     // Step 1: Get user session
//     const supabase = createClient();
//     const { data: { session } } = await supabase.auth.getSession();
//     const user = session?.user;
//     if (!user) {
//       alert("User not signed in");
//       setLoading(false);
//       return;
//     }

//     // Step 2: Get fake AI result
//     const aiResult = await fakeAISummary(jobTitle);

//     // Step 3: Save to MongoDB
//     await fetch("/api/save-to-mongo", {
//       method: "POST",
//       body: JSON.stringify({ job_title: jobTitle, ...aiResult }),
//       headers: { "Content-Type": "application/json" }
//     });

//     // Step 4: Save to Supabase
//     await fetch("/api/save-to-supabase", {
//       method: "POST",
//       body: JSON.stringify({
//         user_id: user.id,
//         job_title: jobTitle,
//         summary: aiResult.summary
//       }),
//       headers: { "Content-Type": "application/json" }
//     });

//     setResult(aiResult);
//     setLoading(false);
//   };

//   return (
//     <div className="max-w-xl mx-auto mt-12 p-4 border rounded-xl shadow-sm">
//       <h2 className="text-2xl font-bold mb-4">AI Job Summarizer</h2>
//       <form onSubmit={handleSubmit} className="flex flex-col gap-4">
//         <input
//           value={jobTitle}
//           onChange={(e) => setJobTitle(e.target.value)}
//           placeholder="Enter a job title"
//           className="border px-4 py-2 rounded"
//         />
//         <button
//           type="submit"
//           className="bg-blue-600 text-white py-2 rounded disabled:opacity-50"
//           disabled={loading}
//         >
//           {loading ? "Analyzing..." : "Generate Summary"}
//         </button>
//       </form>

//       {result && (
//         <div className="mt-6 p-4 bg-gray-50 rounded">
//           <h3 className="font-semibold">AI Summary:</h3>
//           <p>{result.summary}</p>
//         </div>
//       )}
//     </div>
//   );
// }
// 'use client'

// import { useSession } from '@supabase/auth-helpers-react'
// import { useRouter } from 'next/navigation'
// import { useEffect, useState } from 'react'

// export default function DashboardPage() {
//   const session = useSession()
//   const router = useRouter()
//   const [loading, setLoading] = useState(false)
//   const [res, setRes] = useState('')

//   useEffect(() => {
//     if (!session) {
//       router.push('/login')
//     }
//   }, [session,router])

//   const handleFakeAI = async () => {
//     if (!session) return

//     setLoading(true)
//     setRes('')

//     const response = await fetch('/api/save-to-mongo', {
//       method: 'POST',
//       headers: { 'Content-Type': 'application/json' },
//       body: JSON.stringify({
//         user_id: session.user.id,
//         job_title: 'Fake AI Job',
//         ai_summary: 'This is a fake summary generated by our cool AI.',
//         created_at: new Date(),
//       }),
//     })

//     const data = await response.json()
//     setRes(JSON.stringify(data, null, 2))
//     setLoading(false)
//   }

//   if (!session) return <p className="p-4">Redirecting to login...</p>

//   return (
//     <div className="p-4">
//       <h1 className="text-xl font-bold mb-4">Welcome, {session.user.email}</h1>
//       <button
//         onClick={handleFakeAI}
//         className="bg-green-600 text-white px-4 py-2 rounded"
//         disabled={loading}
//       >
//         {loading ? 'Sending to AI...' : 'Run Fake AI and Save to MongoDB'}
//       </button>
//       {res && (
//         <pre className="mt-4 bg-gray-100 p-2 rounded text-sm whitespace-pre-wrap">
//           {res}
//         </pre>
//       )}
//     </div>
//   )
// }


// // app/dashboard/page.tsx
// import { createServerComponentClient } from '@supabase/auth-helpers-nextjs';
// import { redirect } from 'next/navigation';
// import { cookies } from 'next/headers';

// export default async function DashboardPage() {
//   // ✅ Create the Supabase client with the cookies context
//   const supabase = createServerComponentClient({ cookies: () => cookies() });

//   // ✅ Get the session from Supabase
//   const {
//     data: { session },
//   } = await supabase.auth.getSession();

//   // ✅ Redirect if not logged in
//   if (!session) {
//     redirect('/login');
//   }

//   return (
//     <div className="p-4">
//       <h1 className="text-xl font-bold">Welcome, {session.user.email}!</h1>

//       <form action="/api/save-to-mongo" method="POST" className="mt-6">
//         <input type="hidden" name="user_id" value={session.user.id} />
//         <input type="hidden" name="job_title" value="Fake AI Job" />
//         <input type="hidden" name="ai_summary" value="Smart result from our AI" />
//         <input type="hidden" name="created_at" value={new Date().toISOString()} />
//         <button
//           type="submit"
//           className="bg-blue-600 text-white px-4 py-2 rounded"
//         >
//           Run Fake AI & Save to MongoDB
//         </button>
//       </form>
//     </div>
//   );
// }
// app/dashboard/page.tsx
// app/dashboard/page.tsx
// import { createServerComponentClient } from '@supabase/auth-helpers-nextjs';
// import { cookies } from 'next/headers';
// import { redirect } from 'next/navigation';
// import DashboardClient from './DashboardClient';

// export default async function DashboardPage() {
//   const supabase = createServerComponentClient({ cookies });

//   const {
//     data: { session },
//   } = await supabase.auth.getSession();

//   if (!session) {
//     redirect('/login');
//   }

//   return <DashboardClient session={session} />;
// }
//works kinda
export const fetchCache = 'force-no-store';

import { createServerComponentClient } from '@supabase/auth-helpers-nextjs';
import { cookies } from 'next/headers';
import { redirect } from 'next/navigation';

export default async function DashboardPage() {
  const cookieStore = cookies(); // ✅ Keep this as-is, do NOT use `await`

  const supabase = createServerComponentClient({ cookies: () => cookieStore });

  const {
    data: { user },
    error,
  } = await supabase.auth.getUser();

  if (error || !user) {
    redirect('/login');
  }

  return (
    <div className="p-4">
      <h1 className="text-xl font-bold">Welcome, {user.email}!</h1>

      <form action="/api/save-to-mongo" method="POST" className="mt-6">
        <input type="hidden" name="user_id" value={user.id} />
        <input type="hidden" name="job_title" value="Fake AI Job" />
        <input type="hidden" name="ai_summary" value="Smart result from our AI" />
        <input type="hidden" name="created_at" value={new Date().toISOString()} />
        <button
          type="submit"
          className="bg-blue-600 text-white px-4 py-2 rounded"
        >
          Run Fake AI & Save to MongoDB
        </button>
      </form>
    </div>
  );
}


// app/dashboard/page.tsx

// export const fetchCache = 'force-no-store';

// import { createServerComponentClient } from '@supabase/auth-helpers-nextjs';
// import { cookies } from 'next/headers';
// import { redirect } from 'next/navigation';

// export default async function DashboardPage() {
//   // ✅ Correct stable version (no TypeScript errors)
//   const supabase = createServerComponentClient({
//     cookies: () => cookies(),
//   });

//   const {
//     data: { user },
//     error,
//   } = await supabase.auth.getUser();

//   if (error || !user) {
//     redirect('/login');
//   }

//   return (
//     <div className="p-6">
//       <h1 className="text-2xl font-bold">Welcome, {user.email}</h1>
//     </div>
//   );
// }



// import { createServerComponentClient } from '@supabase/auth-helpers-nextjs';
// import { cookies } from 'next/headers';
// import { redirect } from 'next/navigation';

// export default async function DashboardPage() {
//   const cookieStore = await cookies(); // ⬅️ Await here

//   const supabase = createServerComponentClient({ cookies: () => cookieStore });

//   const {
//     data: { user },
//     error,
//   } = await supabase.auth.getUser();

//   if (error || !user) {
//     redirect('/login');
//   }

//   return (
//   <div className="min-h-screen flex flex-col items-center justify-center bg-gray-100 p-4">
//     <h1 className="text-2xl font-bold text-gray-800 mb-6">Welcome, {user.email}</h1>

//     <form action="/auth/signout" method="post">
//       <button
//         type="submit"
//         className="bg-blue-600 hover:bg-blue-700 text-white font-semibold px-6 py-2 rounded shadow"
//       >
//         Logout
//       </button>
//     </form>
//   </div>
// );
// }